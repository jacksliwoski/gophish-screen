var campaigns = [], statuses = {
    // ≡ Campaign Status Labels (so we never get “undefined”):
    "In progress":       { label: "label-primary" },
    "Queued":            { label: "label-info" },
    "Completed":         { label: "label-success" },

    // ≡ Four metric labels used for tooltips and donut colors:
    "Email Sent":        { color: "#1abc9c", label: "label-success",   icon: "fa-envelope",       point: "ct-point-sent"   },
    "Email Screened":    { color: "#FF9800", label: "label-default",   icon: "fa-shield-alt",    point: "ct-point-error"  },
    "Email Opened":      { color: "#4CAF50", label: "label-warning",   icon: "fa-envelope-open",  point: "ct-point-opened" },
    "Link Clicked":      { color: "#f05b4f", label: "label-clicked",   icon: "fa-mouse-pointer", point: "ct-point-clicked" },

    // ≡ Fallback / unused:
    "Unknown":           { color: "#6c7a89", label: "label-default",   icon: "fa-question",       point: "ct-point-error"  },
    "Campaign Created":  { label: "label-success", icon: "fa-rocket" }
}, statsMapping = {
    sent:            "Email Sent",
    opened_real:     "Email Opened",
    clicked_real:    "Link Clicked",
    opened_screened: "Email Screened",
    clicked_screened:"Email Screened"
};

function deleteCampaign(i) {
    if (!confirm("Delete “" + campaigns[i].name + "”?")) return;
    api.campaignId.delete(campaigns[i].id).success(function(r) {
        successFlash(r.message), location.reload();
    });
}

function renderPieChart(opts) {
    return Highcharts.chart(opts.elemId, {
        chart: {
            type: "pie",
            events: {
                load: function() {
                    var ch = this, rend = ch.renderer, pie = ch.series[0];
                    var left = ch.plotLeft + pie.center[0];
                    var top  = ch.plotTop  + pie.center[1];
                    this.innerText = rend.text(opts.data[0].count, left, top).attr({
                        "text-anchor": "middle",
                        "font-size":   "16px",
                        "font-weight": "bold",
                        fill:          opts.colors[0],
                        "font-family":"Helvetica,Arial,sans-serif"
                    }).add();
                },
                render: function() {
                    this.innerText.attr({ text: opts.data[0].count });
                }
            }
        },
        title: { text: opts.title },
        plotOptions: {
            pie: {
                innerSize: "80%",
                dataLabels: { enabled: !1 }
            }
        },
        credits: { enabled: !1 },
        tooltip: {
            formatter: function() {
                if (!this.key) return false;
                return '<span style="color:' + this.color + '">●</span> ' +
                       this.point.name + ": <b>" + this.y + "%</b><br/>";
            }
        },
        series: [{ data: opts.data, colors: opts.colors }]
    });
}

function generateStatsPieCharts(campaigns) {
    var agg = { totalSent: 0, realOpens: 0, screenedCount: 0, realClicks: 0 };

    $.each(campaigns, function(i, c) {
        var s = c.stats || {};
        agg.totalSent += (s.sent || 0);

        var ro = (s.opened_real != null) ? s.opened_real : (s.opened || 0);
        agg.realOpens += ro;

        var so = s.opened_screened  || 0;
        var sc = s.clicked_screened || 0;
        agg.screenedCount += Math.max(so, sc);

        var rc = (s.clicked_real != null) ? s.clicked_real : (s.clicked || 0);
        agg.realClicks += rc;
    });

    var total = agg.totalSent || 1;

    // 1) Email Sent
    (function() {
        var sent    = Math.min(agg.totalSent, total);
        var notSent = total - sent; if (notSent < 0) notSent = 0;
        var sent_data = [
            { name: "Sent",    y: Math.floor((sent/total)*100),   count: sent },
            { name: "",        y: 100 - Math.floor((sent/total)*100) }
        ];
        renderPieChart({
            elemId: "sent_chart",
            title:  "Email Sent",
            data:   sent_data,
            colors: ["#1abc9c", "#dddddd"]
        });
    })();

    // 2) Email Screened
    (function() {
        var sc    = Math.min(agg.screenedCount, total);
        var notSc = total - sc; if (notSc < 0) notSc = 0;
        var screened_data = [
            { name: "Screened",     y: Math.floor((sc/total)*100),    count: sc    },
            { name: "Not Screened", y: Math.floor((notSc/total)*100), count: notSc }
        ];
        renderPieChart({
            elemId: "screened_chart",
            title:  "Email Screened",
            data:   screened_data,
            colors: ["#FF9800", "#dddddd"]
        });
    })();

    // 3) Email Opened (Real)
    (function() {
        var ro    = Math.min(agg.realOpens, total);
        var notRo = total - ro; if (notRo < 0) notRo = 0;
        var opened_data = [
            { name: "Real Opens",   y: Math.floor((ro/total)*100),   count: ro    },
            { name: "Not Opened",   y: Math.floor((notRo/total)*100), count: notRo }
        ];
        renderPieChart({
            elemId: "opened_chart",
            title:  "Email Opened",
            data:   opened_data,
            colors: ["#4CAF50", "#dddddd"]
        });
    })();

    // 4) Link Clicks (Real)
    (function() {
        var rc    = Math.min(agg.realClicks, total);
        var notRc = total - rc; if (notRc < 0) notRc = 0;
        var clicked_data = [
            { name: "Real Clicks", y: Math.floor((rc/total)*100),   count: rc    },
            { name: "Not Clicked", y: Math.floor((notRc/total)*100), count: notRc }
        ];
        renderPieChart({
            elemId: "clicked_chart",
            title:  "Link Clicked",
            data:   clicked_data,
            colors: ["#f05b4f", "#dddddd"]
        });
    })();
}

function generateTimelineChart(campaigns) {
    var overview_data = [];
    $.each(campaigns, function(i, c) {
        var dt    = moment.utc(c.created_date).local();
        var rc    = (c.stats.clicked_real != null) ? c.stats.clicked_real : (c.stats.clicked || 0);
        var total = c.stats.total || 1;
        var pct   = Math.floor((rc/total)*100);
        overview_data.push({
            campaign_id: c.id,
            name:        c.name,
            x:           dt.valueOf(),
            y:           pct
        });
    });

    Highcharts.chart("overview_chart", {
        chart: { zoomType:"x", type:"areaspline" },
        title: { text:"Phishing Success Overview" },
        xAxis: {
            type: "datetime",
            dateTimeLabelFormats: {
                second: "%l:%M:%S",
                minute: "%l:%M",
                hour:   "%l:%M",
                day:    "%b %d, %Y",
                week:   "%b %d, %Y",
                month:  "%b %Y"
            }
        },
        yAxis: {
            min: 0, max:100,
            title: { text: "% of Success" }
        },
        tooltip: {
            formatter: function() {
                return Highcharts.dateFormat(
                           "%A, %b %d %l:%M:%S %P",
                           new Date(this.x)
                       ) + "<br>" + this.point.name + "<br>% Success: <b>" + this.y + "%</b>";
            }
        },
        legend: { enabled: false },
        plotOptions: {
            series: {
                marker: {
                    enabled: true,
                    symbol:  "circle",
                    radius:  3
                },
                cursor: "pointer",
                point: {
                    events: {
                        click: function() {
                            window.location.href = "/campaigns/" + this.campaign_id;
                        }
                    }
                }
            }
        },
        credits: { enabled:false },
        series: [{ data: overview_data, color:"#f05b4f", fillOpacity:0.5 }]
    });
}

$(document).ready(function() {
    Highcharts.setOptions({ global:{ useUTC:false } });

    api.campaigns.summary().success(function(data) {
        $("#loading").hide();
        campaigns = data.campaigns;

        if (campaigns.length > 0) {
            $("#dashboard").show();

            var campaignTable = $("#campaignTable").DataTable({
                columnDefs:[
                    { orderable: !1, targets:"no-sort" },
                    { className:"color-sent",     targets:[2] },
                    { className:"color-screened", targets:[3] },
                    { className:"color-opened",   targets:[4] },
                    { className:"color-clicked",  targets:[5] },
                    { className:"color-status",   targets:[6] }
                ],
                order: [[1,"desc"]]
            });

            var rows = [];
            $.each(campaigns, function(i, c) {
                var cd = moment(c.created_date).format("MMMM Do YYYY, h:mm:ss a");
                var lbl = statuses[c.status] ? statuses[c.status].label : "label-default";

                var ro = (c.stats.opened_real != null) ? c.stats.opened_real : (c.stats.opened || 0);
                var so = c.stats.opened_screened  || 0;
                var sc = c.stats.clicked_screened || 0;
                var screened = Math.max(so, sc);

                var rc = (c.stats.clicked_real != null) ? c.stats.clicked_real : (c.stats.clicked || 0);

                var quickStats;
                if (moment(c.launch_date).isAfter(moment())) {
                    quickStats = "Scheduled to start: " +
                                 moment(c.launch_date).format("MMMM Do YYYY, h:mm:ss a") +
                                 "<br><br>Recipients: " + (c.stats.total || 0);
                } else {
                    quickStats =
                        "Launch Date: " + moment(c.launch_date).format("MMMM Do YYYY, h:mm:ss a") +
                        "<br><br>Recipients: " + (c.stats.total || 0) +
                        "<br><br>Sent: " + (c.stats.sent || 0) +
                        "<br><br>Screened: " + screened +
                        "<br><br>Real Opens: " + ro +
                        "<br><br>Real Clicks: " + rc;
                }

                rows.push([
                    escapeHtml(c.name),                  // 0: Name
                    cd,                                  // 1: Created Date
                    (c.stats.sent || 0),                 // 2: Emails Sent
                    screened,                            // 3: Email Screened
                    ro,                                  // 4: Email Opened (Real)
                    rc,                                  // 5: Link Clicks (Real)
                    '<span class="label ' + lbl + '" data-toggle="tooltip" data-placement="right" data-html="true" title="' +
                        quickStats + '">' + c.status + '</span>', // 6: Status
                    "<div class='pull-right'>" +
                        "<a class='btn btn-primary' href='/campaigns/" + c.id +
                        "' data-toggle='tooltip' data-placement='left' title='View Results'>" +
                        "<i class='fa fa-bar-chart'></i></a> " +
                        "<button class='btn btn-danger' onclick='deleteCampaign(" + i +
                        ")' data-toggle='tooltip' data-placement='left' title='Delete Campaign'>" +
                        "<i class='fa fa-trash-o'></i></button></div>" // 7: Actions
                ]);

                $('[data-toggle="tooltip"]').tooltip();
            });

            campaignTable.rows.add(rows).draw();

            generateStatsPieCharts(campaigns);
            generateTimelineChart(campaigns);
        } else {
            $("#emptyMessage").show();
        }
    }).error(function() {
        errorFlash("Error fetching campaigns");
    });
});
